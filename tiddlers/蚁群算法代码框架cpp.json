[
    {
        "created": "20211203105209456",
        "creator": "胖虎 ",
        "text": "# 蚁群算法代码框架\n\n## 算法简介\n\n蚁群算法具有全局搜索、分布式计算、信息正反馈和启发式搜索的特征，本质上是进化算法中的一种启发式全局优化算法，它有较强的鲁棒性，并且易于与其他方法相结合。\n\n根据蚁群的觅食行为，利用其群体活动中：自组织的特性、分布式计算和正反馈机制，达到搜索收敛的效果。\n\n每一轮迭代每一个蚂蚁都搜索路径，结束后更新信息素，多次迭代后收敛得到解。\n\n## 算法框架\n\n### 算法参数\n\n- 节点数N\n- 蚂蚁数M\n- 路径搜索时的参数α、β\n- 信息素挥发系数ρ\n\n### 运行框架\n\n![image-20210830153709033](C:\\Users\\lei\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210830153709033.png)\n\n## 代码程序\n\n### 类1——Graph\n\n#### 主要成员\n\n- tau信息素矩阵\n- visi启发式信息矩阵\n- prob_matrix转移概率值矩阵\n\n#### 主要成员函数\n\n- 构造函数，初始化启发式信息\n- 路径构造之前，更新转移概率值矩阵\n- 路径构造之后，信息素更新，给ant提供接口\n\n#### 主要代码\n\n```cpp\nclass Graph\n{\npublic:\n\tGraph();//初始化\n\tvoid update_prob_matrix();//更新转移概率矩阵（未归一化）\n\tdouble get_prob(int i, int j) { return prob_matrix[i][j]; };\n\tdouble get_dis(int i, int j) { return distance[i][j]; };\n\tvoid update_tau_reduce();//挥发\n\tvoid update_tau_increase(const int path[N_dim], const double length);//一只蚂蚁的新增信息素\n\nprivate:\n\tdouble distance[N_dim][N_dim];\n\tdouble tau[N_dim][N_dim];\n\tdouble visible[N_dim][N_dim];\n\tdouble prob_matrix[N_dim][N_dim];\n};\n\n```\n\n### 类2——Ant\n\n#### 主要成员\n\n- tabu，禁忌表，构造路径时用\n- path_array，路径，即一个解的编码\n- path_length，解的适应度\n- graph，静态，蚂蚁活动与图交互。\n\n#### 主要成员函数\n\n- find_path()，寻路\n- calc_length()：计算适应度\n- 增加信息素\n\n#### 主要代码\n\n```cpp\nclass Ant\n{\nprivate:\n\tint currentCity, nextCity;\n\tint currentTourIndex;\n\tint tabu[N_dim];\n\npublic:\n\tint path[N_dim + 1];\t\t\t//路径，解\n\tdouble path_length = INT_MAX;\t//适应度\n\n\t//初始化所有值\n\tvoid init();\n\t////计算转移值\n\t//double get_trans_value(int current_index, int next_index);\n\n\tvoid choose_first();\n\t//根据目前的地点，寻找下一个地点，记录在nextCity中\n\tvoid select_next(); //寻找下一个地点，即更新next_city\n\t//寻找下一个地点后，更新状态，包括： path &currentCity &tabu\n\tvoid update_status();\n\t//每一只蚂蚁构建完整路径\n\tvoid find_path();\n\t//计算适应度,\n\tvoid calc_length();\n\n\tvoid show_ant_path();\n\n\n\tstatic Graph graph;\n\n\tvoid add_tau();\n};\n```\n\n### 类3——ACA\n\n#### 主要成员\n\n- Ant ants[M];蚂蚁们，种群，解的集合\n- Ant best_ant;最优解记录\n\n#### 主要成员函数\n\n- 路径构建\n- 更新信息素\n\n#### 主要代码\n\n```cpp\nclass AntColony\n{\nprivate:\n\tAnt ants[M];\n\tAnt best_ant;\n\npublic:\n\tAntColony();\n\tvoid construct_solution(); //路径构建\n\tvoid update_pheromone();   //更新信息素\n\tbool show_current_optimal(); //更新最优值则返回false，局部最优则返回true，输出当前最优解\n\tvoid show_best();\n\n\tvoid aca_go(int bad_time=300);\n};\n```\n\n",
        "title": "蚁群算法代码框架cpp",
        "modified": "20211203105231609",
        "modifier": "胖虎 ",
        "tags": "蚁群算法",
        "type": "text/x-markdown",
        "tmap.id": "e35cc36e-2fff-4836-9a20-bcafd0651ff2"
    }
]