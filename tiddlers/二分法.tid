created: 20220329024333599
creator: 胖虎
modified: 20220329025055953
modifier: 胖虎
tags: 算法
title: 二分法
tmap.id: f1fc686a-2a44-4b34-ba19-c8e7d30bd55c
type: text/vnd.tiddlywiki

二分查找的做法是，定义查找的范围[left,right]，初始查找范围是整个数组。每次取查找范围的中点mid，比较 nums[mid] 和 target的大小，如果相等则mid 即为要寻找的下标，如果不相等则根据 nums[mid] 和 target 的大小关系将查找范围缩小一半。

由于每次查找都会将查找范围缩小一半，因此二分查找的时间复杂度是O(logn)，其中n是数组的长度。

定义搜索区间[left,right]是左闭右闭，基于此，判断条件为left>right的时候，搜索结束。

代码如下

```cpp
int search(vector<int> &nums, int target)
{
    int l = 0, r = nums.size() - 1, m = 0;
    while (l <= r) //定义target在左闭右闭的区间里，[left, right]
    {
        m = l + (r - l) / 2;
        if (nums[m] < target)
        {
            l = m + 1;
        }
        else if (nums[m] > target)
        {
            r = m - 1;
        }
        else // nums[middle] == target
        {
            return m;
        }
    }
    //未找到目标值
    return -1;
}
```