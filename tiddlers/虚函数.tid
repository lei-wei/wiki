created: 20220508050421644
creator: 胖虎
modified: 20220508052303321
modifier: 胖虎
tags: concepts
title: 虚函数
tmap.id: 2d39bb20-926b-441d-9e65-b418094ae3ab
type: text/vnd.tiddlywiki

!! 1. 虚函数
;''虚函数:''
:虚函数必须实现。定义他为虚函数是为了''允许用基类的指针来调用子类的这个函数''。

```cpp
virtual ReturnType FunctionName(Parameter);
```

;''纯虚函数''
:纯虚函数一定没有定义。定义纯虚函数是为了实现一个接口，起到一个规范的作用,规范派生类的行为，''规范继承这个类时必须实现这个函数''。

```cpp
virtual void FunctionName() = 0;
```

!! 2. 意义
虚函数是C++中用于实现多态(polymorphism)的机制。核心理念就是通过基类访问派生类定义的函数。即：对于虚函数来说，父类和子类都有各自的版本。由多态方式调用的时候动态绑定。

纯虚函数：起规范作用，为了安全，也为了工作效率。

实现"推迟联编"或者"动态联编"的功能：一个类函数的调用并不是在编译时刻被确定的，而是在运行时刻被确定的。由于编写代码的时候并不能确定被调用的是基类的函数还是哪个派生类的函数，所以被成为"虚"函数。可以结合以下例子理解。

!! 3. 实例
```cpp
class A
{
public:
    virtual void foo()
    {
        cout<<"A::foo() is called"<<endl;
    }
};
class B:public A
{
public:
    void foo()
    {
        cout<<"B::foo() is called"<<endl;
    }
};
int main(void)
{
    A *a = new B();
    a->foo();   // 在这里，a虽然是指向A的指针，但是被调用的函数(foo)却是B的!
    return 0;
}
```